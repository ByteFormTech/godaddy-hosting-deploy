name: 'GoDaddy Hosting: Build & FTP Deploy'
description: 'Build a static site (Vite/React/Next export/etc.) and deploy to GoDaddy shared hosting via FTP/FTPS.'
author: 'Your Name'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  server-dir:
    description: 'Target directory on the FTP server, relative to the FTP root (e.g., ./ or ./subfolder/).'
    required: true
  node-version:
    description: 'Node.js version to use for the build.'
    required: false
    default: '20'
  build-cmd:
    description: 'Command to build the site.'
    required: false
    default: 'npm ci && npm run build'
  local-dir:
    description: 'Local build output folder to upload.'
    required: false
    default: 'dist/'
  protocol:
    description: 'FTP protocol to use: ftp or ftps.'
    required: false
    default: 'ftps'
  clean-slate:
    description: 'If true, cleans the remote directory before syncing.'
    required: false
    default: 'true'
  log-level:
    description: 'Log verbosity: minimal | standard | verbose.'
    required: false
    default: 'minimal'

# Pass FTP_HOST, FTP_USER, FTP_PASS via env in the caller workflow.

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start banner
      shell: bash
      run: |
        echo "============================================================"
        echo "🚀 GoDaddy Hosting: Build & FTP Deploy"
        echo "============================================================"
        echo "::notice::Starting build & deploy…"

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'

    - name: Preflight path check
      shell: bash
      run: |
        if [[ "${{ inputs.server-dir }}" == /*home* ]]; then
          echo "::warning::server-dir looks absolute ('${{ inputs.server-dir }}'). Most FTP roots are chrooted; use relative paths like './' or './subfolder/'."
        fi

    - name: Show configuration
      shell: bash
      run: |
        echo "::group::Resolved configuration"
        echo "Node:        ${{ inputs.node-version }}"
        echo "Build cmd:   ${{ inputs.build-cmd }}"
        echo "Local dir:   ${{ inputs.local-dir }}"
        echo "Server dir:  ${{ inputs.server-dir }}"
        echo "Protocol:    ${{ inputs.protocol }}"
        echo "Clean slate: ${{ inputs.clean-slate }}"
        echo "::endgroup::"

    - name: Build site
      shell: bash
      run: |
        echo "::group::Build output"
        set -e
        ${{ inputs.build-cmd }}
        echo "::endgroup::"

    - name: Write deploy marker (optional)
      shell: bash
      run: echo "deployed $GITHUB_SHA at $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > "${{ inputs.local-dir }}/__deploy-check.txt"

    - name: Pre-deploy log
      shell: bash
      run: |
        echo "::notice::Uploading from '${{ inputs.local-dir }}' → '${{ inputs.server-dir }}' via ${{ inputs.protocol }}"

    - name: FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@v4.3.6
      with:
        server: ${{ env.FTP_HOST }}
        username: ${{ env.FTP_USER }}
        password: ${{ env.FTP_PASS }}
        protocol: ${{ inputs.protocol }}
        local-dir: ${{ inputs.local-dir }}
        server-dir: ${{ inputs.server-dir }}
        dangerous-clean-slate: ${{ inputs.clean-slate }}
        log-level: ${{ inputs.log-level }}

    - name: Write step summary
      if: ${{ success() }}
      shell: bash
      run: |
        {
          echo "## ✅ Deployment complete"
          echo ""
          echo "- **Commit:** \`$GITHUB_SHA\`"
          echo "- **Local dir:** \`${{ inputs.local-dir }}\`"
          echo "- **Server dir:** \`${{ inputs.server-dir }}\`"
          echo "- **Protocol:** \`${{ inputs.protocol }}\`"
          echo ""
          echo "> Tip: set \`log-level: verbose\` to see per-file sync details."
        } >> "$GITHUB_STEP_SUMMARY"

    - name: Error summary
      if: ${{ failure() }}
      shell: bash
      run: |
        {
          echo "## ❌ Deployment failed"
          echo ""
          echo "- Check the **Build output** and **FTP Deploy** steps above."
          echo "- Common fixes: use relative \`server-dir\` (e.g., \`./\`), verify FTP secrets, delete \`.ftp-deploy-sync-state.json\` on the server."
        } >> "$GITHUB_STEP_SUMMARY"
